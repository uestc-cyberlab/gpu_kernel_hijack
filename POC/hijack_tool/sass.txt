extern "C" __global__ void kernel(unsigned char* A, unsigned char* B, int n) 
{
    	int ix = blockDim.x * blockIdx.x + threadIdx.x;
	int threshold = 230;
    	if(ix<n)
    	{
    		if(B[ix]>=threshold)
    		{
    			A[ix] = 255;
    		}
    		else
    		{
    			A[ix] = 0;
    		}
    	}
}


code for sm_61
		Function : kernel
	.headerflags	@"EF_CUDA_TEXMODE_UNIFIED EF_CUDA_64BIT_ADDRESS EF_CUDA_SM61 EF_CUDA_VIRTUAL_SM(EF_CUDA_SM61)"
                                                                                 /* 0x001cfc00e22007f6 */
        /*0008*/                   MOV R1, c[0x0][0x20] ;                        /* 0x4c98078000870001 */
        /*0010*/                   S2R R2, SR_CTAID.X ;                          /* 0xf0c8000002570002 */
        /*0018*/                   S2R R0, SR_TID.X ;                            /* 0xf0c8000002170000 */
                                                                                 /* 0x001fd842fec20ff1 */
        /*0028*/                   XMAD.MRG R3, R2.reuse, c[0x0] [0x8].H1, RZ ;  /* 0x4f107f8000270203 */
        /*0030*/                   XMAD R0, R2.reuse, c[0x0] [0x8], R0 ;         /* 0x4e00000000270200 */
        /*0038*/                   XMAD.PSL.CBCC R2, R2.H1, R3.H1, R0 ;          /* 0x5b30001800370202 */
                                                                                 /* 0x001ff400fd4007ed */
        /*0048*/                   ISETP.GE.AND P0, PT, R2, c[0x0][0x150], PT ;  /* 0x4b6d038005470207 */
        /*0050*/                   NOP ;                                         /* 0x50b0000000070f00 */
        /*0058*/               @P0 EXIT ;                                        /* 0xe30000000000000f */
                                                                                 /* 0x001f8800fcc007e1 */
        /*0068*/                   SHR R0, R2, 0x1f ;                            /* 0x3829000001f70200 */
        /*0070*/                   IADD R4.CC, R2, c[0x0][0x148] ;               /* 0x4c10800005270204 */
        /*0078*/                   IADD.X R5, R0, c[0x0][0x14c] ;                /* 0x4c10080005370005 */
                                                                                 /* 0x001fdc00fcc007b1 */
        /*0088*/                   LDG.E.U8 R4, [R4] ;                           /* 0xeed0200000070404 */
        /*0090*/                   IADD R2.CC, R2, c[0x0][0x140] ;               /* 0x4c10800005070202 */
        /*0098*/                   IADD.X R3, R0, c[0x0][0x144] ;                /* 0x4c10080005170003 */
                                                                                 /* 0x001fbc001e2107ed */
        /*00a8*/                   ISETP.GT.U32.AND P0, PT, R4, 0xe5, PT ;       /* 0x366803800e570407 */  //0xe5 is the threshold
        /*00b0*/              @!P0 STG.E.U8 [R2], RZ ;                           /* 0xeed82000000802ff */
        /*00b8*/                   NOP ;                                         /* 0x50b0000000070f00 */
                                                                                 /* 0x001fc800ffa007e6 */
        /*00c8*/                   NOP ;                                         /* 0x50b0000000070f00 */
        /*00d0*/              @!P0 EXIT ;                                        /* 0xe30000000008000f */
        /*00d8*/                   MOV32I R0, 0xff ;                             /* 0x010000000ff7f000 */
                                                                                 /* 0x001fbc00fde007f1 */
        /*00e8*/                   STG.E.U8 [R2], R0 ;                           /* 0xeed8200000070200 */
        /*00f0*/                   NOP ;                                         /* 0x50b0000000070f00 */
        /*00f8*/                   NOP ;                                         /* 0x50b0000000070f00 */
                                                                                 /* 0x001ffc00fc2007ef */
        /*0108*/                   NOP ;                                         /* 0x50b0000000070f00 */
        /*0110*/                   NOP ;                                         /* 0x50b0000000070f00 */
        /*0118*/                   EXIT ;                                        /* 0xe30000000007000f */
                                                                                 /* 0x001f8000fc0007ff */
        /*0128*/                   BRA 0x120 ;                                   /* 0xe2400fffff07000f */
        /*0130*/                   NOP;                                          /* 0x50b0000000070f00 */
        /*0138*/                   NOP;                                          /* 0x50b0000000070f00 */
		..........

